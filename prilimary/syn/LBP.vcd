$date
    Sep  7, 2023  11:38:00
$end
$version
    TOOL:	ncsim(64)	15.20-s039
$end
$timescale
    1 ps
$end

$scope module testfixture $end
$var parameter 32 !    N_EXP  $end
$var parameter 32 "    N_PAT  $end

$scope module LBP $end

$scope module \cs_reg[0]  $end
$var reg       1 #    NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[6]  $end
$var reg       1 $    NOTIFIER  $end
$upscope $end


$scope module \cs_reg[4]  $end
$var reg       1 %    NOTIFIER  $end
$upscope $end


$scope module \cs_reg[3]  $end
$var reg       1 &    NOTIFIER  $end
$upscope $end


$scope module \kernel_cnt_reg[3]  $end
$var reg       1 '    NOTIFIER  $end
$upscope $end


$scope module \kernel_cnt_reg[1]  $end
$var reg       1 (    NOTIFIER  $end
$upscope $end


$scope module \kernel_cnt_reg[0]  $end
$var reg       1 )    NOTIFIER  $end
$upscope $end


$scope module \kernel_cnt_reg[2]  $end
$var reg       1 *    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[13]  $end
$var reg       1 +    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[11]  $end
$var reg       1 ,    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[10]  $end
$var reg       1 -    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[9]  $end
$var reg       1 .    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[8]  $end
$var reg       1 /    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[7]  $end
$var reg       1 0    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[6]  $end
$var reg       1 1    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[5]  $end
$var reg       1 2    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[4]  $end
$var reg       1 3    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[3]  $end
$var reg       1 4    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[2]  $end
$var reg       1 5    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[1]  $end
$var reg       1 6    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[0]  $end
$var reg       1 7    NOTIFIER  $end
$upscope $end


$scope module \gray_addr_reg[12]  $end
$var reg       1 8    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[0]  $end
$var reg       1 9    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[1]  $end
$var reg       1 :    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[2]  $end
$var reg       1 ;    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[3]  $end
$var reg       1 <    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[4]  $end
$var reg       1 =    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[5]  $end
$var reg       1 >    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[6]  $end
$var reg       1 ?    NOTIFIER  $end
$upscope $end


$scope module \lbp_data_reg[7]  $end
$var reg       1 @    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[13]  $end
$var reg       1 A    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[12]  $end
$var reg       1 B    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[11]  $end
$var reg       1 C    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[10]  $end
$var reg       1 D    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[9]  $end
$var reg       1 E    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[8]  $end
$var reg       1 F    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[7]  $end
$var reg       1 G    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[6]  $end
$var reg       1 H    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[5]  $end
$var reg       1 I    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[4]  $end
$var reg       1 J    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[3]  $end
$var reg       1 K    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[2]  $end
$var reg       1 L    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[1]  $end
$var reg       1 M    NOTIFIER  $end
$upscope $end


$scope module \lbp_addr_reg[0]  $end
$var reg       1 N    NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[0]  $end
$var reg       1 O    NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[0]  $end
$var reg       1 P    NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[5]  $end
$var reg       1 Q    NOTIFIER  $end
$upscope $end


$scope module \cs_reg[1]  $end
$var reg       1 R    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][7]  $end
$var reg       1 S    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][6]  $end
$var reg       1 T    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][5]  $end
$var reg       1 U    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][4]  $end
$var reg       1 V    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][3]  $end
$var reg       1 W    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][2]  $end
$var reg       1 X    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][1]  $end
$var reg       1 Y    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[7][0]  $end
$var reg       1 Z    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][7]  $end
$var reg       1 [    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][6]  $end
$var reg       1 \    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][5]  $end
$var reg       1 ]    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][4]  $end
$var reg       1 ^    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][3]  $end
$var reg       1 _    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][2]  $end
$var reg       1 `    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][1]  $end
$var reg       1 a    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[5][0]  $end
$var reg       1 b    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][7]  $end
$var reg       1 c    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][6]  $end
$var reg       1 d    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][5]  $end
$var reg       1 e    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][4]  $end
$var reg       1 f    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][3]  $end
$var reg       1 g    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][2]  $end
$var reg       1 h    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][1]  $end
$var reg       1 i    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[1][0]  $end
$var reg       1 j    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][7]  $end
$var reg       1 k    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][6]  $end
$var reg       1 l    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][5]  $end
$var reg       1 m    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][4]  $end
$var reg       1 n    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][3]  $end
$var reg       1 o    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][2]  $end
$var reg       1 p    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][1]  $end
$var reg       1 q    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[4][0]  $end
$var reg       1 r    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][7]  $end
$var reg       1 s    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][6]  $end
$var reg       1 t    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][5]  $end
$var reg       1 u    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][4]  $end
$var reg       1 v    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][3]  $end
$var reg       1 w    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][2]  $end
$var reg       1 x    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][1]  $end
$var reg       1 y    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[0][0]  $end
$var reg       1 z    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][7]  $end
$var reg       1 {    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][6]  $end
$var reg       1 |    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][5]  $end
$var reg       1 }    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][4]  $end
$var reg       1 ~    NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][3]  $end
$var reg       1 !!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][2]  $end
$var reg       1 "!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][1]  $end
$var reg       1 #!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[6][0]  $end
$var reg       1 $!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][7]  $end
$var reg       1 %!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][6]  $end
$var reg       1 &!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][5]  $end
$var reg       1 '!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][4]  $end
$var reg       1 (!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][3]  $end
$var reg       1 )!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][2]  $end
$var reg       1 *!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][1]  $end
$var reg       1 +!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[2][0]  $end
$var reg       1 ,!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][7]  $end
$var reg       1 -!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][6]  $end
$var reg       1 .!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][5]  $end
$var reg       1 /!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][4]  $end
$var reg       1 0!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][3]  $end
$var reg       1 1!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][2]  $end
$var reg       1 2!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][1]  $end
$var reg       1 3!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[3][0]  $end
$var reg       1 4!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][7]  $end
$var reg       1 5!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][5]  $end
$var reg       1 6!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][4]  $end
$var reg       1 7!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][0]  $end
$var reg       1 8!   NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[4]  $end
$var reg       1 9!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[4]  $end
$var reg       1 :!   NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[1]  $end
$var reg       1 ;!   NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[2]  $end
$var reg       1 <!   NOTIFIER  $end
$upscope $end


$scope module \ax_y_reg[3]  $end
$var reg       1 =!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[1]  $end
$var reg       1 >!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[2]  $end
$var reg       1 ?!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[3]  $end
$var reg       1 @!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[5]  $end
$var reg       1 A!   NOTIFIER  $end
$upscope $end


$scope module \ax_x_reg[6]  $end
$var reg       1 B!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][1]  $end
$var reg       1 C!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][6]  $end
$var reg       1 D!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][3]  $end
$var reg       1 E!   NOTIFIER  $end
$upscope $end


$scope module \kernel_reg[8][2]  $end
$var reg       1 F!   NOTIFIER  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b100000000000000 "
b100000000000000 !
x#
x$
x%
x&
x'
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
x?
x@
xA
xB
xC
xD
xE
xF
xG
xH
xI
xJ
xK
xL
xM
xN
xO
xP
xQ
xR
xS
xT
xU
xV
xW
xX
xY
xZ
x[
x\
x]
x^
x_
x`
xa
xb
xc
xd
xe
xf
xg
xh
xi
xj
xk
xl
xm
xn
xo
xp
xq
xr
xs
xt
xu
xv
xw
xx
xy
xz
x{
x|
x}
x~
x!!
x"!
x#!
x$!
x%!
x&!
x'!
x(!
x)!
x*!
x+!
x,!
x-!
x.!
x/!
x0!
x1!
x2!
x3!
x4!
x5!
x6!
x7!
x8!
x9!
x:!
x;!
x<!
x=!
x>!
x?!
x@!
xA!
xB!
xC!
xD!
xE!
xF!
$end
#1524136000
